{"version":3,"sources":["components/Navbar.js","components/Header.js","components/CharacterItem.js","components/Score.js","components/Footer.js","components/Characters.js","App.js","index.js"],"names":["NavBar","props","console","log","score","highScore","message","match","Navbar","className","fixed","Text","Header","CharacterItem","character","image","id","name","src","alt","onClick","handleClickEvent","Score","context","handleClose","setState","show","resetState","handleShow","bind","state","Modal","this","onHide","Title","Body","Footer","Button","variant","React","Component","Characters","characters","randomCharacters","selected","handleCheckSelection","handleResortCharacters","sort","Math","random","includes","map","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d55215cf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport \"../styles/navbar.css\";\r\n\r\nconst NavBar = props => {\r\n  console.log(\"Nav bar props\", props);\r\n  // Destructure props\r\n  const { score, highScore, message, match } = props;\r\n\r\n  return (\r\n    <Navbar className=\"navbar-container\" fixed=\"top\">\r\n      <Navbar.Text className=\"d-flex w-50 order-0 nav-title\">\r\n        Clicky Game\r\n      </Navbar.Text>\r\n      <Navbar.Text className=\"d-flex w-50 justify-content-center order-2\">\r\n        <span\r\n          className={\r\n            score === 0 && props.match === false\r\n              ? \"grey\"\r\n              : match\r\n              ? \"red\"\r\n              : \"green\"\r\n          }\r\n        >\r\n          {message}\r\n        </span>\r\n      </Navbar.Text>\r\n      <Navbar.Text className=\"navbar-text  mt-1 w-50 text-right order-1 order-md-last\">\r\n        Your Score: {score} | High Score: {highScore}\r\n      </Navbar.Text>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;","import React from \"react\";\r\n\r\n// Stateless Function\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header-container\">\r\n      <h1>Clicky Game</h1>\r\n      <h2>\r\n        Click on an image to score points. The game ends when you click on the\r\n        same image twice.\r\n      </h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"../styles/characterItem.css\";\r\n\r\nconst CharacterItem = props => {\r\n  // Destructor props\r\n  const { image, id, name } = props.character;\r\n\r\n  return (\r\n    <img\r\n      className=\"card\"\r\n      src={image}\r\n      alt={name}\r\n      onClick={() => props.handleClickEvent(id)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CharacterItem;\r\n","import React from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"../styles/score.css\";\r\n\r\nclass Score extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    // Convert to arrow functions\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n\r\n    this.state = {\r\n      show: true\r\n    };\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n    // Reset Character state\r\n    this.props.resetState();\r\n  };\r\n\r\n  handleShow = () => {\r\n    this.setState({ show: true });\r\n  };\r\n  x;\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal\r\n          className=\"modal-container\"\r\n          show={this.state.show}\r\n          onHide={this.handleClose}\r\n        >\r\n          <Modal.Header>\r\n            <Modal.Title className=\"modal-title\">Game Over</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>Your Score: {this.props.score}</p>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={this.handleClose}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Score;","import React from \"react\";\r\nimport \"../styles/footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"footer-bar\" />\r\n      <div className=\"footer-title\">\r\n        <h5>Clicky Game</h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport CharacterItem from \"./CharacterItem\";\r\nimport Score from \"./Score\";\r\nimport Footer from \"./Footer\";\r\nimport characters from \"../data/characters.json\";\r\nimport NavBar from \"./Navbar\";\r\nimport \"../styles/characters.css\";\r\n\r\nclass Characters extends React.Component {\r\n  state = {\r\n    characters: characters,\r\n    randomCharacters: [],\r\n    selected: [],\r\n    score: 0,\r\n    highScore: 0,\r\n    match: false,\r\n    message: \"Click an image to begin!\"\r\n  };\r\n\r\n  // Randomly displayed characters\r\n  componentDidMount() {\r\n    const randomCharacters = characters.sort(() => {\r\n      return Math.random() - 0.5;\r\n    });\r\n    this.setState({ randomCharacters });\r\n  }\r\n\r\n  handleClickEvent = id => {\r\n    console.log(\"handle click event\", id);\r\n    // Spread operator to track IDs selected\r\n    this.setState({ selected: [...this.state.selected, id] });\r\n    // Invoke function to check ID argument against selected array\r\n    this.handleCheckSelection(id);\r\n    // Invoke function to change the random order of characters\r\n    this.handleResortCharacters();\r\n    // If score equal (array.length-1) - game over\r\n  };\r\n\r\n  // Randomly displayed characters\r\n  handleResortCharacters = () => {\r\n    const randomCharacters = this.state.randomCharacters.sort(() => {\r\n      return Math.random() - 0.5;\r\n    });\r\n    this.setState({ randomCharacters });\r\n  };\r\n\r\n  handleCheckSelection = id => {\r\n    console.log(\r\n      \"check the id against the selection array\",\r\n      id,\r\n      this.state.selected\r\n    );\r\n    if (this.state.selected.includes(id)) {\r\n      console.log(\"match - end game\");\r\n      // Send message\r\n      this.setState({ message: \"Incorrect Guess!\" });\r\n      this.setState({ match: true });\r\n    } else {\r\n      // No match - continue game\r\n      console.log(\"continue\");\r\n      // Increment score\r\n      this.setState({ score: this.state.score + 1 });\r\n      console.log(\"Characters selected\", this.state.selected);\r\n      console.log(\"Score\", this.state.score);\r\n      // Increment high score\r\n      if (this.state.score >= this.state.highScore) {\r\n        this.setState({ highScore: this.state.highScore + 1 });\r\n        console.log(\"High Score\", this.state.highScore);\r\n      }\r\n      // Send message\r\n      this.setState({ message: \"You Guessed Correctly!\" });\r\n    }\r\n  };\r\n\r\n  resetState = () => {\r\n    console.log(\"invoke reset function\");\r\n    // Reset user score to 0\r\n    this.setState({ score: 0 });\r\n    // Reset match to false\r\n    this.setState({ match: false });\r\n    // Reset selected array\r\n    this.setState({ selected: [] });\r\n    // Reset message\r\n    this.setState({ message: \"Click an image to begin!\" });\r\n  };\r\n\r\n  render() {\r\n    let renderScore = this.state.match;\r\n    let score;\r\n\r\n    if (renderScore) {\r\n      score = <Score score={this.state.score} resetState={this.resetState} />;\r\n    }\r\n    return (\r\n      <div>\r\n        {score}\r\n        {console.log(this.state.characters)}\r\n        <div className=\"container\">\r\n          <div className=\"img-container\">\r\n            {this.state.randomCharacters.map(character => (\r\n              <CharacterItem\r\n                key={character.id}\r\n                character={character}\r\n                handleClickEvent={this.handleClickEvent}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n        <NavBar\r\n          score={this.state.score}\r\n          highScore={this.state.highScore}\r\n          message={this.state.message}\r\n          match={this.state.match}\r\n        />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Characters;","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Header from \"./components/Header\";\nimport \"./App.css\";\nimport Characters from \"./components/Characters\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar />\n        <Header />\n        <Characters />\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}